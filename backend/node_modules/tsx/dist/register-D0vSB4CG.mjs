var W=Object.defineProperty;var o=(e,s)=>W(e,"name",{value:s,configurable:!0});import{r as J}from"./get-pipe-path-BHW2eJdv.mjs";import d from"node:module";import h from"node:path";import{fileURLToPath as U}from"node:url";import{parseTsconfig as k,getTsconfig as Q,createFilesMatcher as z,createPathsMatcher as B}from"get-tsconfig";import G from"node:fs";import{b as H,i as X,a as K}from"./index-BQiEz0On.mjs";import{p as $}from"./client-BQVF1NaW.mjs";const j=Object.create(null);j[".js"]=[".ts",".tsx",".js",".jsx"],j[".jsx"]=[".tsx",".ts",".jsx",".js"],j[".cjs"]=[".cts"],j[".mjs"]=[".mts"];const w=o(e=>{const[s,t]=e.split("?"),r=h.extname(s),i=j[r];if(i){const f=s.slice(0,-r.length);return i.map(a=>f+a+(t?`?${t}`:""))}},"resolveTsPath"),V=o(e=>{const s=e.indexOf(":");if(s!==-1)return e.slice(0,s)},"getScheme"),L=o(e=>e[0]==="."&&(e[1]==="/"||e[1]==="."||e[2]==="/"),"isRelativePath"),Y=o(e=>L(e)||h.isAbsolute(e),"isUnixPath"),Z=o(e=>{if(Y(e))return!0;const s=V(e);return s&&s!=="node"},"requestAcceptsQuery"),F="file://",A=/\.([cm]?ts|[tj]sx)($|\?)/,q=/\.json($|\?)/,ee=/\/(?:$|\?)/,se=/^(?:@[^/]+\/)?[^/]+$/;let b,v,R=!1;const N=o(e=>{let s=null;if(e){const t=h.resolve(e);s={path:t,config:k(t)}}else{try{s=Q()}catch{}if(!s)return}b=z(s),v=B(s),R=s?.config.compilerOptions?.allowJs??!1},"loadTsconfig"),M=o(e=>Array.from(e).length>0?`?${e.toString()}`:"","urlSearchParamsStringify"),te=`${h.sep}node_modules${h.sep}`,C=o(e=>{if(!e.startsWith("data:text/javascript,"))return e;const s=e.indexOf("?");if(s===-1)return e;const t=new URLSearchParams(e.slice(s+1));let r=t.get("filePath");if(r){const i=t.get("namespace");i&&(r+=`?namespace=${encodeURIComponent(i)}`),d._cache[r]=d._cache[e],delete d._cache[e],e=r}return e},"interopCjsExports"),_=o((e,s,t)=>{if(!(t?.filename&&A.test(t.filename))&&!R)return;const r=w(s);if(r)for(const i of r)try{return e(i)}catch(f){const{code:a}=f;if(a!=="MODULE_NOT_FOUND"&&a!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw f}},"resolveTsFilename"),ne=[".ts",".tsx",".jsx"],E=o((e,s)=>{for(const t of ne)try{return e(s+t)}catch{}},"tryExtensions"),ae=o((e,s)=>(t,r,i,f)=>{const a=o(c=>e(c,r,i,f),"resolve");t=C(t);const[m,g]=t.split("?"),u=new URLSearchParams(g);if(r?.filename){const n=new URLSearchParams(r.filename.split("?")[1]).get("namespace");n&&u.append("namespace",n)}if((u.get("namespace")??void 0)!==s)return a(t);const l=M(u);if(t=m,t.startsWith(F)&&(t=U(t)),v&&!L(t)&&!r?.filename?.includes(te)){const c=v(t);for(const n of c){const p=_(a,n,r);if(p)return p+l;try{return a(n)+l}catch{const P=E(a,n)||E(a,`${t}${h.sep}index`);if(P)return P+l}}}const x=_(a,t,r);if(x)return x+l;try{const c=a(t);return c+(h.isAbsolute(c)?l:"")}catch(c){const n=c;if(n.code==="MODULE_NOT_FOUND"&&typeof n.path=="string"&&n.path.endsWith("package.json")){const P=n.message.match(/^Cannot find module '([^']+)'$/);if(P){const S=P[1],y=_(a,S,r);if(y)return y+l}const O=n.message.match(/^Cannot find module '([^']+)'. Please verify that the package.json has a valid "main" entry$/);if(O){const S=O[1],y=_(a,S,r);if(y)return y+l}}const p=E(a,t)||E(a,`${t}${h.sep}index`);if(p)return p+l;throw n}},"createResolveFilename"),re=`
//# sourceMappingURL=data:application/json;base64,`,D=o(()=>process.sourceMapsEnabled??!0,"shouldApplySourceMap"),T=o(({code:e,map:s})=>e+re+Buffer.from(JSON.stringify(s),"utf8").toString("base64"),"inlineSourceMap"),oe=[".cts",".mts",".ts",".tsx",".jsx"],ce=[".js",".cjs",".mjs"],ie=o((e,s)=>{const t=Object.assign(Object.create(null),e),r=t[".js"],i=o((f,a)=>{const[m,g]=a.split("?");if((new URLSearchParams(g).get("namespace")??void 0)!==s)return r(f,m);$?.send&&$.send({type:"dependency",path:m});const l=oe.some(n=>m.endsWith(n)),x=ce.some(n=>m.endsWith(n));if(!l&&!x)return r(f,m);let c=G.readFileSync(m,"utf8");if(m.endsWith(".cjs")){const n=H(a,c);n&&(c=D()?T(n):n.code)}else if(l||X(c)){const n=K(c,a,{tsconfigRaw:b?.(m)});c=D()?T(n):n.code}f._compile(c,m)},"transformer");return t[".js"]=i,[".ts",".tsx",".jsx",".mjs"].forEach(f=>{Object.defineProperty(t,f,{value:i,enumerable:!1})}),t},"createExtensions"),I=o((e,s)=>{if(!s)throw new Error("The current file path (__filename or import.meta.url) must be provided in the second argument of tsx.require()");return(typeof s=="string"&&s.startsWith("file://")||s instanceof URL)&&(s=U(s)),h.resolve(h.dirname(s),e)},"resolveContext"),le=o(e=>{const{sourceMapsEnabled:s}=process,{_extensions:t,_resolveFilename:r}=d;N(process.env.TSX_TSCONFIG_PATH),process.setSourceMapsEnabled(!0);const i=ae(r,e?.namespace);d._resolveFilename=i;const f=ie(d._extensions,e?.namespace);d._extensions=f;const a=o(()=>{s===!1&&process.setSourceMapsEnabled(!1),d._extensions=t,d._resolveFilename=r},"unregister");if(e?.namespace){const m=o((u,l)=>{const x=I(u,l),[c,n]=x.split("?"),p=new URLSearchParams(n);return e.namespace&&p.set("namespace",e.namespace),J(c+M(p))},"scopedRequire");a.require=m;const g=o((u,l,x)=>{const c=I(u,l),[n,p]=c.split("?"),P=new URLSearchParams(p);return e.namespace&&P.set("namespace",e.namespace),i(n+M(P),module,!1,x)},"scopedResolve");a.resolve=g,a.unregister=a}return a},"register");export{q as a,T as b,Z as c,ee as d,se as e,b as f,R as g,F as h,C as i,w as j,v as k,N as l,le as r,A as t};
